---
interface Props {
  currentPage: number;
  totalPages: number;
  baseUrl: string;
}

const { currentPage, totalPages, baseUrl } = Astro.props;

const pages = Array.from({ length: totalPages }, (_, i) => i + 1);
const maxVisiblePages = 5;

let visiblePages = pages;
if (totalPages > maxVisiblePages) {
  const start = Math.max(
    1,
    Math.min(
      currentPage - Math.floor(maxVisiblePages / 2),
      totalPages - maxVisiblePages + 1
    )
  );
  visiblePages = pages.slice(start - 1, start + maxVisiblePages - 1);
}
---

<nav class="flex justify-center mt-12" aria-label="ページネーション">
  <ul class="inline-flex items-center gap-2 rounded-lg bg-white p-1 shadow-sm">
    {
      currentPage > 1 && (
        <li>
          <a
            href={`${baseUrl}${currentPage === 2 ? '' : `/page/${currentPage - 1}`}`}
            class="flex items-center justify-center w-10 h-10 rounded-lg text-gray-600 hover:bg-gray-100 hover:text-primary transition-all"
            aria-label="前のページ"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="h-5 w-5"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M15 19l-7-7 7-7"
              />
            </svg>
          </a>
        </li>
      )
    }

    {
      visiblePages.map((page) => (
        <li>
          <a
            href={`${baseUrl}${page === 1 ? '' : `/page/${page}`}`}
            class:list={[
              'flex items-center justify-center w-10 h-10 rounded-lg font-medium transition-all',
              page === currentPage
                ? 'bg-primary text-white shadow-md'
                : 'text-gray-600 hover:bg-gray-100 hover:text-primary',
            ]}
            aria-current={page === currentPage ? 'page' : undefined}
          >
            {page}
          </a>
        </li>
      ))
    }

    {
      currentPage < totalPages && (
        <li>
          <a
            href={`${baseUrl}/page/${currentPage + 1}`}
            class="flex items-center justify-center w-10 h-10 rounded-lg text-gray-600 hover:bg-gray-100 hover:text-primary transition-all"
            aria-label="次のページ"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="h-5 w-5"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M9 5l7 7-7 7"
              />
            </svg>
          </a>
        </li>
      )
    }
  </ul>
</nav>
